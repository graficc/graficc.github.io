<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>C&#43;&#43; - 分类 - Horel&#39;s Blog</title>
        <link>http://limbostray.github.io/categories/c&#43;&#43;/</link>
        <description>C&#43;&#43; - 分类 - Horel&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1494255412@mail.dlut.edu.cn (Horel)</managingEditor>
            <webMaster>1494255412@mail.dlut.edu.cn (Horel)</webMaster><lastBuildDate>Sun, 21 Nov 2021 21:09:34 &#43;0000</lastBuildDate><atom:link href="http://limbostray.github.io/categories/c&#43;&#43;/" rel="self" type="application/rss+xml" /><item>
    <title>CMake Example</title>
    <link>http://limbostray.github.io/posts/cmake-example/</link>
    <pubDate>Sun, 21 Nov 2021 21:09:34 &#43;0000</pubDate><author>1494255412@mail.dlut.edu.cn (Horel)</author><guid>http://limbostray.github.io/posts/cmake-example/</guid>
    <description><![CDATA[<h1 id="cmake-example">CMake Example</h1>
<p>因为众所周知的原因 <del>CMake限制了C++的发展</del></p>
<p>不得不简单学习了一下CMake的使用，列在这里</p>
<h2 id="cmake文件">CMake文件</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span><span class="lnt">175
</span><span class="lnt">176
</span><span class="lnt">177
</span><span class="lnt">178
</span><span class="lnt">179
</span><span class="lnt">180
</span><span class="lnt">181
</span><span class="lnt">182
</span><span class="lnt">183
</span><span class="lnt">184
</span><span class="lnt">185
</span><span class="lnt">186
</span><span class="lnt">187
</span><span class="lnt">188
</span><span class="lnt">189
</span><span class="lnt">190
</span><span class="lnt">191
</span><span class="lnt">192
</span><span class="lnt">193
</span><span class="lnt">194
</span><span class="lnt">195
</span><span class="lnt">196
</span><span class="lnt">197
</span><span class="lnt">198
</span><span class="lnt">199
</span><span class="lnt">200
</span><span class="lnt">201
</span><span class="lnt">202
</span><span class="lnt">203
</span><span class="lnt">204
</span><span class="lnt">205
</span><span class="lnt">206
</span><span class="lnt">207
</span><span class="lnt">208
</span><span class="lnt">209
</span><span class="lnt">210
</span><span class="lnt">211
</span><span class="lnt">212
</span><span class="lnt">213
</span><span class="lnt">214
</span><span class="lnt">215
</span><span class="lnt">216
</span><span class="lnt">217
</span><span class="lnt">218
</span><span class="lnt">219
</span><span class="lnt">220
</span><span class="lnt">221
</span><span class="lnt">222
</span><span class="lnt">223
</span><span class="lnt">224
</span><span class="lnt">225
</span><span class="lnt">226
</span><span class="lnt">227
</span><span class="lnt">228
</span><span class="lnt">229
</span><span class="lnt">230
</span><span class="lnt">231
</span><span class="lnt">232
</span><span class="lnt">233
</span><span class="lnt">234
</span><span class="lnt">235
</span><span class="lnt">236
</span><span class="lnt">237
</span><span class="lnt">238
</span><span class="lnt">239
</span><span class="lnt">240
</span><span class="lnt">241
</span><span class="lnt">242
</span><span class="lnt">243
</span><span class="lnt">244
</span><span class="lnt">245
</span><span class="lnt">246
</span><span class="lnt">247
</span><span class="lnt">248
</span><span class="lnt">249
</span><span class="lnt">250
</span><span class="lnt">251
</span><span class="lnt">252
</span><span class="lnt">253
</span><span class="lnt">254
</span><span class="lnt">255
</span><span class="lnt">256
</span><span class="lnt">257
</span><span class="lnt">258
</span><span class="lnt">259
</span><span class="lnt">260
</span><span class="lnt">261
</span><span class="lnt">262
</span><span class="lnt">263
</span><span class="lnt">264
</span><span class="lnt">265
</span><span class="lnt">266
</span><span class="lnt">267
</span><span class="lnt">268
</span><span class="lnt">269
</span><span class="lnt">270
</span><span class="lnt">271
</span><span class="lnt">272
</span><span class="lnt">273
</span><span class="lnt">274
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cmake" data-lang="cmake"><span class="line"><span class="cl"><span class="c">#===================================================#
</span></span></span><span class="line"><span class="cl"><span class="c">#           CMakeLists.txt -- rootFolder
</span></span></span><span class="line"><span class="cl"><span class="c">#===================================================#
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># 变量解释
</span></span></span><span class="line"><span class="cl"><span class="c"># PROJECT_SOURCE_DIR       --- project root path
</span></span></span><span class="line"><span class="cl"><span class="c"># PROJECT_BINARY_DIR       --- cmake 编译所在的目录 path
</span></span></span><span class="line"><span class="cl"><span class="c"># CMAKE_SOURCE_DIR         --- current CMakeLists.txt path
</span></span></span><span class="line"><span class="cl"><span class="c"># CMAKE_CURRENT_SOURCE_DIR --- current sub CMakeLists.txt path
</span></span></span><span class="line"><span class="cl"><span class="c"># CMAKE_BINARY_DIR         --- run cmake .. path
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#                cmake version
</span></span></span><span class="line"><span class="cl"><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">cmake_minimum_required</span><span class="p">(</span><span class="s">VERSION</span> <span class="s">3.1</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">message</span><span class="p">(</span> <span class="s">STATUS</span> <span class="s2">&#34;CMake Version: ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}.${CMAKE_PATCH_VERSION}&#34;</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#                    OS
</span></span></span><span class="line"><span class="cl"><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">if</span><span class="p">(</span> <span class="s">APPLE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">option</span><span class="p">(</span> <span class="s">TPR_OS_MACOSX_</span> <span class="s2">&#34; MACOSX &#34;</span> <span class="s">ON</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">option</span><span class="p">(</span> <span class="s">TPR_OS_UNIX_</span> <span class="s2">&#34; UNIX &#34;</span> <span class="s">ON</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">message</span><span class="p">(</span> <span class="s">STATUS</span> <span class="s2">&#34;___APPLE___&#34;</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">elseif</span><span class="p">(</span> <span class="s">UNIX</span> <span class="s">AND</span> <span class="s">NOT</span> <span class="s">APPLE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">option</span><span class="p">(</span> <span class="s">TPR_OS_LINUX_</span> <span class="s2">&#34; LINUX &#34;</span> <span class="s">ON</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">option</span><span class="p">(</span> <span class="s">TPR_OS_UNIX_</span> <span class="s2">&#34; UNIX &#34;</span> <span class="s">ON</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">message</span><span class="p">(</span> <span class="s">STATUS</span> <span class="s2">&#34;___UNIX___&#34;</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#-- 当使用 Virsual Studio 编译 cmake项目时，可用 WIN32
</span></span></span><span class="line"><span class="cl"><span class="c">#   如果出错，尝试改用 MSVC
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">elseif</span><span class="p">(</span> <span class="s">WIN32</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">option</span><span class="p">(</span> <span class="s">TPR_OS_WIN32_</span> <span class="s2">&#34; WIN32 &#34;</span> <span class="s">ON</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">message</span><span class="p">(</span> <span class="s">STATUS</span> <span class="s2">&#34;___WIN32___&#34;</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">endif</span><span class="p">(</span> <span class="s">APPLE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#---- Must before project!!! ----
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#                c++ standard
</span></span></span><span class="line"><span class="cl"><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">set</span> <span class="p">(</span><span class="s">CMAKE_CXX_STANDARD</span> <span class="s">17</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">set</span> <span class="p">(</span><span class="s">CMAKE_CXX_STANDARD_REQUIRED</span> <span class="s">ON</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">set</span> <span class="p">(</span><span class="s">CMAKE_CXX_EXTENSIONS</span> <span class="s">OFF</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#                project name
</span></span></span><span class="line"><span class="cl"><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">project</span> <span class="p">(</span> <span class="s">Project_Name</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#                project version
</span></span></span><span class="line"><span class="cl"><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#-- *** test: 0.1 ***
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">set</span> <span class="p">(</span> <span class="s">VERSION_MAJOR</span> <span class="s">0</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">set</span> <span class="p">(</span> <span class="s">VERSION_MINOR</span> <span class="s">1</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#                   build/publish/
</span></span></span><span class="line"><span class="cl"><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#-- change finally exe out-path: build/publish
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">set</span> <span class="p">(</span><span class="s">EXECUTABLE_OUTPUT_PATH</span> <span class="o">${</span><span class="nv">PROJECT_BINARY_DIR</span><span class="o">}</span><span class="s">/publish</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">set</span><span class="p">(</span><span class="s">CMAKE_ARCHIVE_OUTPUT_DIRECTORY</span> <span class="o">${</span><span class="nv">CMAKE_BINARY_DIR</span><span class="o">}</span><span class="s">/lib</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">set</span><span class="p">(</span><span class="s">CMAKE_LIBRARY_OUTPUT_DIRECTORY</span> <span class="o">${</span><span class="nv">CMAKE_BINARY_DIR</span><span class="o">}</span><span class="s">/lib</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">set</span><span class="p">(</span><span class="s">CMAKE_RUNTIME_OUTPUT_DIRECTORY</span> <span class="o">${</span><span class="nv">CMAKE_BINARY_DIR</span><span class="o">}</span><span class="s">/publish</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># 确认一些 变量值：
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">message</span><span class="p">(</span><span class="s">STATUS</span> <span class="s2">&#34;[__INFO__] CMAKE_BINARY_DIR: ${CMAKE_BINARY_DIR}&#34;</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">message</span><span class="p">(</span><span class="s">STATUS</span> <span class="s2">&#34;[__INFO__] PROJECT_BINARY_DIR: ${PROJECT_BINARY_DIR}&#34;</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">message</span><span class="p">(</span><span class="s">STATUS</span> <span class="s2">&#34;[__INFO__] CMAKE_RUNTIME_OUTPUT_DIRECTORY: ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}&#34;</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#                 SySconfig
</span></span></span><span class="line"><span class="cl"><span class="c">#          宏定义系统OS类型，CMake版本等
</span></span></span><span class="line"><span class="cl"><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#-- 配置 一个 h文件，用来 从 cmake 传递一些 变量 到 源文件 中。
</span></span></span><span class="line"><span class="cl"><span class="c">#-- 我们需要手动编写 .h.in 文件。
</span></span></span><span class="line"><span class="cl"><span class="c">#-- 然后，cmake调用会 帮我们自动生成对应的 h文件。
</span></span></span><span class="line"><span class="cl"><span class="c">#-- 最后，正式 make编译时。源文件 就能 include 这些生成的 h文件。
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">option</span><span class="p">(</span> <span class="s">SWITCH_1</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34; option test: switch 1 &#34;</span> <span class="s">ON</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">configure_file</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;${CMAKE_CURRENT_SOURCE_DIR}/sysconfig/SysConfig.h.in&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;${EXECUTABLE_OUTPUT_PATH}/sysconfig/SysConfig.h&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#                    src (.cpp/.c)
</span></span></span><span class="line"><span class="cl"><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#-- 创建变量 PIXEL_FILES （是个 list）
</span></span></span><span class="line"><span class="cl"><span class="c">#-- 包含 主进程需要的所有 .c/.cpp 文件
</span></span></span><span class="line"><span class="cl"><span class="c">#   GLOB_RECURSE 会递归访问目录，这是一种粗粒度的写法
</span></span></span><span class="line"><span class="cl"><span class="c">#   如果想要精细控制，应该改用 GLOB 
</span></span></span><span class="line"><span class="cl"><span class="c">#   请把所有 .c/.cpp 文件写入 src 目录，及其递归子目录下，
</span></span></span><span class="line"><span class="cl"><span class="c">#   然后就什么都不用管了
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">FILE</span><span class="p">(</span><span class="s">GLOB_RECURSE</span>   <span class="s">PIXEL_FILES</span>   
</span></span><span class="line"><span class="cl">                    <span class="o">${</span><span class="nv">CMAKE_CURRENT_SOURCE_DIR</span><span class="o">}</span><span class="s">/src/*.cpp</span>
</span></span><span class="line"><span class="cl">                    <span class="o">${</span><span class="nv">CMAKE_CURRENT_SOURCE_DIR</span><span class="o">}</span><span class="s">/src/*.c</span>
</span></span><span class="line"><span class="cl">                    <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#                   App_Name
</span></span></span><span class="line"><span class="cl"><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">if</span><span class="p">(</span> <span class="o">${</span><span class="nv">CMAKE_VERSION</span><span class="o">}</span> <span class="s">VERSION_GREATER_EQUAL</span> <span class="s">3.16</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_UNITY_BUILD_BATCH_SIZE</span> <span class="s">16</span> <span class="p">)</span> <span class="c"># 10 ～ 20
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">endif</span><span class="p">()</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">add_executable</span><span class="p">(</span> <span class="s">App_Name</span> <span class="o">${</span><span class="nv">PIXEL_FILES</span><span class="o">}</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#-- set libs/dlls output-name --&gt; &#34;App_Name.xxx&#34;
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">set_target_properties</span><span class="p">(</span><span class="s">App_Name</span> <span class="s">PROPERTIES</span> <span class="s">PREFIX</span> <span class="s2">&#34;&#34;</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">set_target_properties</span><span class="p">(</span><span class="s">App_Name</span> <span class="s">PROPERTIES</span> <span class="s">OUTPUT_NAME</span> <span class="s2">&#34;App_Name&#34;</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">if</span><span class="p">(</span> <span class="o">${</span><span class="nv">CMAKE_VERSION</span><span class="o">}</span> <span class="s">VERSION_GREATER_EQUAL</span> <span class="s">3.16</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">target_precompile_headers</span><span class="p">(</span> <span class="s">App_Name</span> <span class="s">PRIVATE</span> <span class="o">${</span><span class="nv">CMAKE_CURRENT_SOURCE_DIR</span><span class="o">}</span><span class="s">/src/_pch_/pch.h</span> <span class="p">)</span> <span class="c"># PCH
</span></span></span><span class="line"><span class="cl"><span class="c"></span>    <span class="nb">set_target_properties</span><span class="p">(</span> <span class="s">App_Name</span> <span class="s">PROPERTIES</span> <span class="s">UNITY_BUILD</span> <span class="s">ON</span><span class="p">)</span> <span class="c"># UNITY
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">endif</span><span class="p">()</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#                   include  （.h/.hpp）
</span></span></span><span class="line"><span class="cl"><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># macro():
</span></span></span><span class="line"><span class="cl"><span class="c"># 本宏函数，会在目录 src/ 下检查所有 递归子目录
</span></span></span><span class="line"><span class="cl"><span class="c"># 如果某个目录，内含 .h/.hpp 文件，这个目录就会被收集到一个 list 中
</span></span></span><span class="line"><span class="cl"><span class="c"># 最终返回这个 list
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">MACRO</span><span class="p">(</span> <span class="s">collect_head_dirs</span> <span class="s">return_list</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">FILE</span><span class="p">(</span><span class="s">GLOB_RECURSE</span>   <span class="s">new_list</span> 
</span></span><span class="line"><span class="cl">                        <span class="o">${</span><span class="nv">CMAKE_CURRENT_SOURCE_DIR</span><span class="o">}</span><span class="s">/src/*.h</span>
</span></span><span class="line"><span class="cl">                        <span class="o">${</span><span class="nv">CMAKE_CURRENT_SOURCE_DIR</span><span class="o">}</span><span class="s">/src/*.hpp</span>
</span></span><span class="line"><span class="cl">                        <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">SET</span><span class="p">(</span><span class="s">dir_list</span> <span class="s2">&#34;&#34;</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">FOREACH</span><span class="p">(</span><span class="s">file_path</span> <span class="o">${</span><span class="nv">new_list</span><span class="o">}</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>        <span class="nb">GET_FILENAME_COMPONENT</span><span class="p">(</span><span class="s">dir_path</span> <span class="o">${</span><span class="nv">file_path</span><span class="o">}</span> <span class="s">PATH</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>        <span class="nb">SET</span><span class="p">(</span><span class="s">dir_list</span> <span class="o">${</span><span class="nv">dir_list</span><span class="o">}</span> <span class="o">${</span><span class="nv">dir_path</span><span class="o">}</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">ENDFOREACH</span><span class="p">()</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">LIST</span><span class="p">(</span><span class="s">REMOVE_DUPLICATES</span> <span class="s">dir_list</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">SET</span><span class="p">(</span><span class="o">${</span><span class="nv">return_list</span><span class="o">}</span> <span class="o">${</span><span class="nv">dir_list</span><span class="o">}</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">ENDMACRO</span><span class="p">()</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># call macro
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">collect_head_dirs</span><span class="p">(</span> <span class="s">src_header_dirs</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># 打印实际收集到的 目录数目 （无关紧要部分）
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">list</span><span class="p">(</span><span class="s">LENGTH</span> <span class="s">src_header_dirs</span> <span class="s">src_header_dirs_count</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">message</span><span class="p">(</span><span class="s">STATUS</span> <span class="s2">&#34;[INFO] Found ${src_header_dirs_count} header directories.&#34;</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># ===== 设置 include 目录路径 =====
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">target_include_directories</span> <span class="p">(</span> <span class="s">App_Name</span> <span class="s">PUBLIC</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># === 跨平台宏文件（cmake创建） ===
</span></span></span><span class="line"><span class="cl"><span class="c"></span>    <span class="o">${</span><span class="nv">EXECUTABLE_OUTPUT_PATH</span><span class="o">}</span><span class="s">/sysconfig</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># === 第三方库 ===
</span></span></span><span class="line"><span class="cl"><span class="c"></span>    <span class="o">${</span><span class="nv">CMAKE_CURRENT_SOURCE_DIR</span><span class="o">}</span><span class="s">/deps/rapidjson</span>
</span></span><span class="line"><span class="cl">    <span class="o">${</span><span class="nv">CMAKE_CURRENT_SOURCE_DIR</span><span class="o">}</span><span class="s">/deps/fmt-6.1.2/include</span>
</span></span><span class="line"><span class="cl">    <span class="c"># 在此处添加更多 第三方库
</span></span></span><span class="line"><span class="cl"><span class="c"></span>    <span class="c"># 具体写法，请查阅各个 库文档
</span></span></span><span class="line"><span class="cl"><span class="c"></span>    <span class="c"># ...
</span></span></span><span class="line"><span class="cl"><span class="c"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># === 项目代码 ===
</span></span></span><span class="line"><span class="cl"><span class="c"></span>    <span class="c"># 自动包含 src/ 目录下的所有 有效目录
</span></span></span><span class="line"><span class="cl"><span class="c"></span>    <span class="o">${</span><span class="nv">src_header_dirs</span><span class="o">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># 与上一条几乎一样
</span></span></span><span class="line"><span class="cl"><span class="c"># 但是添加了 SYSTEM 关键词。
</span></span></span><span class="line"><span class="cl"><span class="c"># 添加在此的 第三方库，会被屏蔽掉一部分 warnings
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">target_include_directories</span> <span class="p">(</span> <span class="s">App_Name</span> <span class="s">SYSTEM</span> <span class="s">PUBLIC</span>
</span></span><span class="line"><span class="cl">    <span class="o">${</span><span class="nv">CMAKE_CURRENT_SOURCE_DIR</span><span class="o">}</span><span class="s">/deps</span>
</span></span><span class="line"><span class="cl">    <span class="o">${</span><span class="nv">CMAKE_CURRENT_SOURCE_DIR</span><span class="o">}</span><span class="s">/deps/glm.9.9.5</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#             子目录 CMakeLists.txt
</span></span></span><span class="line"><span class="cl"><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#-- 子 CMakeLists.txt 执行的 中间产物，将分别放在 
</span></span></span><span class="line"><span class="cl"><span class="c">#      build/src  build/libhello  目录中。
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">add_subdirectory</span><span class="p">(</span><span class="o">${</span><span class="nv">CMAKE_CURRENT_SOURCE_DIR</span><span class="o">}</span><span class="s">/deps/fmt-6.1.2</span> <span class="s">EXCLUDE_FROM_ALL</span><span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c">#             target_link_libraries
</span></span></span><span class="line"><span class="cl"><span class="c">#---------------------------------------------------#
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">if</span> <span class="p">(</span> <span class="s">UNIX</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">target_link_libraries</span><span class="p">(</span> <span class="s">App_Name</span>
</span></span><span class="line"><span class="cl">                            <span class="s">fmt</span>
</span></span><span class="line"><span class="cl">                            <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">else</span><span class="p">()</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">target_link_libraries</span><span class="p">(</span> <span class="s">App_Name</span>
</span></span><span class="line"><span class="cl">                            <span class="s">fmt</span>
</span></span><span class="line"><span class="cl">                            <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">endif</span><span class="p">(</span> <span class="s">UNIX</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># 编译选项，可以自行增删
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">target_compile_options</span><span class="p">(</span> <span class="s">App_Name</span>
</span></span><span class="line"><span class="cl">                        <span class="s">PRIVATE</span> 
</span></span><span class="line"><span class="cl">                        <span class="s">-Wall</span> <span class="s">-Wextra</span>
</span></span><span class="line"><span class="cl">                        <span class="s">-Wno-c++98-compat</span>
</span></span><span class="line"><span class="cl">                        <span class="s">-Wno-c++98-compat-pedantic</span>
</span></span><span class="line"><span class="cl">                        <span class="s">-Wno-language-extension-token</span>      <span class="c">#- glad
</span></span></span><span class="line"><span class="cl"><span class="c"></span>						<span class="s">-Wno-nonportable-system-include-path</span>
</span></span><span class="line"><span class="cl">						<span class="s">-Wno-reserved-id-macro</span>
</span></span><span class="line"><span class="cl">						<span class="s">-Wno-global-constructors</span>            <span class="c">#++ need ++
</span></span></span><span class="line"><span class="cl"><span class="c"></span>                        <span class="s">-Wno-exit-time-destructors</span>          <span class="c">#++ need ++
</span></span></span><span class="line"><span class="cl"><span class="c"></span>                        <span class="s">-Wno-covered-switch-default</span>         <span class="c">#++ need ++
</span></span></span><span class="line"><span class="cl"><span class="c"></span>                        <span class="s">-Wno-switch-enum</span>                    <span class="c">#++ need ++
</span></span></span><span class="line"><span class="cl"><span class="c"></span>                        <span class="s">-Wno-unused-parameter</span>               <span class="c">#++ need ++
</span></span></span><span class="line"><span class="cl"><span class="c"></span>                        <span class="s">-Wno-unused-member-function</span>         <span class="c">#++ need ++
</span></span></span><span class="line"><span class="cl"><span class="c"></span>                        <span class="s">-Wno-missing-variable-declarations</span>  <span class="c">#++ need ++
</span></span></span><span class="line"><span class="cl"><span class="c"></span>                        <span class="s">-Wno-missing-prototypes</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                        <span class="s">-Wno-old-style-cast</span>   <span class="c">#---- tmp ---- 
</span></span></span><span class="line"><span class="cl"><span class="c"></span>                        <span class="s">-Wno-unused-variable</span> <span class="c">#----- tmp ----
</span></span></span><span class="line"><span class="cl"><span class="c"></span>                        <span class="s">-Wno-unused-private-field</span> <span class="c">#----- tmp ----
</span></span></span><span class="line"><span class="cl"><span class="c"></span>
</span></span><span class="line"><span class="cl">                        <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#=========== 优化设置（非正式） ============
</span></span></span><span class="line"><span class="cl"><span class="c"># 不喜欢这组设置，可以将它彻底删除掉
</span></span></span><span class="line"><span class="cl"><span class="c"># 整体上只做了一次改动：
</span></span></span><span class="line"><span class="cl"><span class="c">#   release 模式，仍然允许 assert 宏起效
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#-------- UNIX ----------
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">if</span><span class="p">(</span> <span class="s">UNIX</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_C_FLAGS</span>                  <span class="s2">&#34;-O0&#34;</span>              <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;regular mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_C_FLAGS_DEBUG</span>            <span class="s2">&#34;-O0 -g&#34;</span>           <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;debug mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_C_FLAGS_MINSIZEREL</span>       <span class="s2">&#34;-O0 -DNDEBUG&#34;</span>     <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;minSizeRel mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_C_FLAGS_RELEASE</span>          <span class="s2">&#34;-O2 -DNDEBUG&#34;</span>     <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;release mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_C_FLAGS_RELWITHDEBINFO</span>   <span class="s2">&#34;-O2 -g -DNDEBUG&#34;</span>  <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;relWithDebugInfo mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_CXX_FLAGS</span>                 <span class="s2">&#34;-O0&#34;</span>             <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;regular mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_CXX_FLAGS_DEBUG</span>           <span class="s2">&#34;-O0 -g&#34;</span>          <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;debug mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_CXX_FLAGS_MINSIZEREL</span>      <span class="s2">&#34;-O0 -DNDEBUG&#34;</span>    <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;minSizeRel mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_CXX_FLAGS_RELEASE</span>         <span class="s2">&#34;-O2 -DNDEBUG&#34;</span>    <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;release mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_CXX_FLAGS_RELWITHDEBINFO</span>  <span class="s2">&#34;-O2 -g -DNDEBUG&#34;</span> <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;relWithDebugInfo mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#-------- WIN ----------
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nb">else</span><span class="p">()</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="c"># do not have CMAKE_C_FLAGS;
</span></span></span><span class="line"><span class="cl"><span class="c"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_C_FLAGS_DEBUG</span>            <span class="s2">&#34;/MDd /Zi /Ob0 /Od /RTC1&#34;</span>   <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;debug mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_C_FLAGS_MINSIZEREL</span>       <span class="s2">&#34;/MD /O0 /Ob1 /DNDEBUG&#34;</span>     <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;minSizeRel mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_C_FLAGS_RELEASE</span>          <span class="s2">&#34;/MD /O2 /Ob1 /DNDEBUG&#34;</span>     <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;release mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_C_FLAGS_RELWITHDEBINFO</span>   <span class="s2">&#34;/MD /Zi /O2 /Ob1 /DNDEBUG&#34;</span> <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;relWithDebugInfo mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="c"># do not have CMAKE_CXX_FLAGS;
</span></span></span><span class="line"><span class="cl"><span class="c"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_CXX_FLAGS_DEBUG</span>            <span class="s2">&#34;/MDd /Zi /Ob0 /Od /RTC1&#34;</span>   <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;debug mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_CXX_FLAGS_MINSIZEREL</span>       <span class="s2">&#34;/MD /O0 /Ob1 /DNDEBUG&#34;</span>     <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;minSizeRel mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_CXX_FLAGS_RELEASE</span>          <span class="s2">&#34;/MD /O2 /Ob1 /DNDEBUG&#34;</span>     <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;release mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span>    <span class="nb">set</span> <span class="p">(</span> <span class="s">CMAKE_CXX_FLAGS_RELWITHDEBINFO</span>   <span class="s2">&#34;/MD /Zi /O2 /Ob1 /DNDEBUG&#34;</span> <span class="s">CACHE</span> <span class="s">STRING</span> <span class="s2">&#34;relWithDebugInfo mode: no optimize&#34;</span> <span class="s">FORCE</span> <span class="p">)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nb">endif</span><span class="p">(</span> <span class="s">UNIX</span> <span class="p">)</span><span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="build脚本">Build脚本</h2>
<h3 id="unix构建脚本">Unix构建脚本</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">#------------- prepare dirs ---------------</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 将 根目录下的一些 资料目录（比如 &#34;shaders&#34;,&#34;jsons&#34; ）</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 复制进 &lt;root&gt;/build/publish/ 目录下</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">DIR_base</span><span class="o">=</span><span class="s2">&#34;</span><span class="k">$(</span> <span class="nb">cd</span> <span class="s2">&#34;</span><span class="k">$(</span> dirname <span class="s2">&#34;</span><span class="si">${</span><span class="nv">BASH_SOURCE</span><span class="p">[0]</span><span class="si">}</span><span class="s2">&#34;</span> <span class="k">)</span><span class="s2">&#34;</span> <span class="o">&amp;&amp;</span> <span class="nb">pwd</span> <span class="k">)</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">DIR_out</span><span class="o">=</span><span class="si">${</span><span class="nv">DIR_base</span><span class="si">}</span>/build/publish/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">DIR_src_shaders</span><span class="o">=</span><span class="si">${</span><span class="nv">DIR_base</span><span class="si">}</span>/shaders/
</span></span><span class="line"><span class="cl"><span class="nv">DIR_src_jsons</span><span class="o">=</span><span class="si">${</span><span class="nv">DIR_base</span><span class="si">}</span>/jsons/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">DIR_dst_shaders</span><span class="o">=</span><span class="si">${</span><span class="nv">DIR_out</span><span class="si">}</span>/shaders/
</span></span><span class="line"><span class="cl"><span class="nv">DIR_dst_jsons</span><span class="o">=</span><span class="si">${</span><span class="nv">DIR_out</span><span class="si">}</span>/jsons/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> -e <span class="s2">&#34;------------&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> -e <span class="s2">&#34;DIR_base: </span><span class="si">${</span><span class="nv">DIR_base</span><span class="si">}</span><span class="s2"> &#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> -e <span class="s2">&#34;DIR_out: </span><span class="si">${</span><span class="nv">DIR_out</span><span class="si">}</span><span class="s2"> &#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> -e <span class="s2">&#34;------------&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> ! -d <span class="s2">&#34;</span><span class="si">${</span><span class="nv">DIR_out</span><span class="si">}</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    mkdir -p <span class="si">${</span><span class="nv">DIR_out</span><span class="si">}</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> ! -d <span class="s2">&#34;</span><span class="si">${</span><span class="nv">DIR_dst_shaders</span><span class="si">}</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    mkdir -p <span class="si">${</span><span class="nv">DIR_dst_shaders</span><span class="si">}</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> ! -d <span class="s2">&#34;</span><span class="si">${</span><span class="nv">DIR_dst_jsons</span><span class="si">}</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    mkdir -p <span class="si">${</span><span class="nv">DIR_dst_jsons</span><span class="si">}</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Access Permission</span>
</span></span><span class="line"><span class="cl">chmod -R <span class="nv">ug</span><span class="o">=</span>rwx <span class="si">${</span><span class="nv">DIR_out</span><span class="si">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#-----------------------#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># cp -R &#34;dir1&#34;/. &#34;dir2&#34; </span>
</span></span><span class="line"><span class="cl"><span class="c1"># copy files in &#34;dir1&#34;, not copy &#34;dir1&#34; self </span>
</span></span><span class="line"><span class="cl"><span class="c1">#:</span>
</span></span><span class="line"><span class="cl">cp -R <span class="si">${</span><span class="nv">DIR_src_shaders</span><span class="si">}</span>.   <span class="si">${</span><span class="nv">DIR_dst_shaders</span><span class="si">}</span> 
</span></span><span class="line"><span class="cl">cp -R <span class="si">${</span><span class="nv">DIR_src_jsons</span><span class="si">}</span>.     <span class="si">${</span><span class="nv">DIR_dst_jsons</span><span class="si">}</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#------------- build cpp/c# ----------------</span>
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> build
</span></span><span class="line"><span class="cl">cmake -DCMAKE_BUILD_TYPE<span class="o">=</span>Release ..
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 多线程加速编译，可自行改写线程数，比如：-j8</span>
</span></span><span class="line"><span class="cl">make -j4
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> ..
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="win构建脚本">Win构建脚本</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">@echo off
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">REM ------------- build cpp ----------------
</span></span><span class="line"><span class="cl">REM before run this shell
</span></span><span class="line"><span class="cl">REM go to Visual Studio first, 
</span></span><span class="line"><span class="cl">REM     <span class="nb">set</span> Build root: <span class="si">${</span><span class="nv">projectDir</span><span class="si">}</span><span class="se">\b</span>uild
</span></span><span class="line"><span class="cl">REM     compiler cpp-exe by cmake-clang
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">REM ----------------- prepare <span class="nb">dirs</span> ---------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">SET <span class="nv">DIR_base</span><span class="o">=</span>%~dp0
</span></span><span class="line"><span class="cl">SET <span class="nv">DIR_out</span><span class="o">=</span>%~dp0<span class="se">\b</span>uild<span class="se">\p</span>ublish
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">SET <span class="nv">DIR_src_shaders</span><span class="o">=</span>%~dp0<span class="se">\s</span>haders
</span></span><span class="line"><span class="cl">SET <span class="nv">DIR_src_jsons</span><span class="o">=</span>%~dp0<span class="se">\j</span>sons
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">SET <span class="nv">DIR_dst_shaders</span><span class="o">=</span>%~dp0<span class="se">\b</span>uild<span class="se">\p</span>ublish<span class="se">\s</span>haders
</span></span><span class="line"><span class="cl">SET <span class="nv">DIR_dst_jsons</span><span class="o">=</span>%~dp0<span class="se">\b</span>uild<span class="se">\p</span>ublish<span class="se">\j</span>sons
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mkdir %DIR_out%
</span></span><span class="line"><span class="cl">mkdir %DIR_dst_shaders%
</span></span><span class="line"><span class="cl">mkdir %DIR_dst_jsons%
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">xcopy /E /V /F /K /Y %DIR_src_shaders% %DIR_dst_shaders%
</span></span><span class="line"><span class="cl">xcopy /E /V /F /K /Y %DIR_src_jsons% %DIR_dst_jsons%
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="使用clang构建">使用clang构建</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="c1"># Ubuntu supports multiple versions of clang to be installed at the same time.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># The tests need to determine the clang binary before calling cmake</span>
</span></span><span class="line"><span class="cl"><span class="nv">clang_bin</span><span class="o">=</span><span class="sb">`</span>which clang<span class="sb">`</span>
</span></span><span class="line"><span class="cl"><span class="nv">clang_xx_bin</span><span class="o">=</span><span class="sb">`</span>which clang++<span class="sb">`</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> -z <span class="nv">$clang_bin</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nv">clang_ver</span><span class="o">=</span><span class="sb">`</span>dpkg --get-selections <span class="p">|</span> grep clang <span class="p">|</span> grep -v -m1 libclang <span class="p">|</span> cut -f1 <span class="p">|</span> cut -d <span class="s1">&#39;-&#39;</span> -f2<span class="sb">`</span>
</span></span><span class="line"><span class="cl">    <span class="nv">clang_bin</span><span class="o">=</span><span class="s2">&#34;clang-</span><span class="nv">$clang_ver</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">clang_xx_bin</span><span class="o">=</span><span class="s2">&#34;clang++-</span><span class="nv">$clang_ver</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Will use clang [</span><span class="nv">$clang_bin</span><span class="s2">] and clang++ [</span><span class="nv">$clang_xx_bin</span><span class="s2">]&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mkdir -p build.clang <span class="o">&amp;&amp;</span> <span class="nb">cd</span> build.clang <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    cmake .. -DCMAKE_C_COMPILER<span class="o">=</span><span class="nv">$clang_bin</span> -DCMAKE_CXX_COMPILER<span class="o">=</span><span class="nv">$clang_xx_bin</span> <span class="o">&amp;&amp;</span> make -j -l <span class="m">13</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="sysconfig跨平台宏">sysconfig跨平台宏</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="c1">// sysconfig/Sysconfig.h.in
</span></span></span><span class="line"><span class="cl"><span class="c1">// 注释行 格式
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="cp">#ifndef TPR_SYS_CONFIG_TPR_H_
</span></span></span><span class="line"><span class="cl"><span class="cp">#define TPR_SYS_CONFIG_TPR_H_
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">//-- 获得 项目版本号，设置为 宏，以便 源码 中使用。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define VERSION_MAJOR @VERSION_MAJOR@
</span></span></span><span class="line"><span class="cl"><span class="cp">#define VERSION_MINOR @VERSION_MINOR@
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">//-- SWITCH_1 是个 option，需要 cmake 动态生成
</span></span></span><span class="line"><span class="cl"><span class="c1">// 示范如何创建一个 cmake 自定义变量
</span></span></span><span class="line"><span class="cl"><span class="c1">// 最终可以传递到 编译后的 程序体内
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#cmakedefine SWITCH_1
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">//-- 标明自己所处 OS
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#cmakedefine  TPR_OS_UNIX_
</span></span></span><span class="line"><span class="cl"><span class="cp">#cmakedefine  TPR_OS_MACOSX_
</span></span></span><span class="line"><span class="cl"><span class="cp">#cmakedefine  TPR_OS_LINUX_
</span></span></span><span class="line"><span class="cl"><span class="cp">#cmakedefine  TPR_OS_WIN32_
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//-- CMAKE_SYSTEM_NAME 表示 当前系统名，比如 Linux，Darwin
</span></span></span><span class="line"><span class="cl"><span class="c1">//-- 使用 @...@ 提取后，再用 &#34;...&#34; 将其设置为 字符串宏
</span></span></span><span class="line"><span class="cl"><span class="c1">//-- 以便 源码 中使用。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define SYSTEM_NAME &#34;@CMAKE_SYSTEM_NAME@&#34;
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cp">#endif
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
</channel>
</rss>

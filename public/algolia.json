[
    {
        "title": "About",
        "uri": "about",
        "content": "19                                  Computer Graphics           John Carmack Linus Torvalds hurts   pain hard work pain regret               https   horel github io  GAMES101   https   github com horel GAMES101     Horel   UnOfficial    https   horel github io",
        "objectID": "about",
        "date": "2022-04-22T10:08:04.000Z",
        "draft": false,
        "math": false,
        "keywords": [
            ""
        ],
        "tags": [
            ""
        ],
        "categories": [
            ""
        ]
    },
    {
        "title": "First_post",
        "uri": "posts/first_post/first_post",
        "content": "",
        "objectID": "posts/first_post/first_post",
        "date": "2022-04-22T14:22:04.000Z",
        "draft": false,
        "math": true,
        "resources": [
            {
                "name": "featured-image",
                "src": "nvidia.jpg"
            },
            {
                "name": "featured-image-preview",
                "src": "featured-image-preview.webp"
            }
        ],
        "featuredImage": "nvidia.jpg",
        "featuredImagePreview": "nvidia.jpg",
        "keywords": [
            ""
        ],
        "tags": [
            ""
        ],
        "categories": [
            ""
        ],
        "lastmod": "2022-04-22T14:22:04.000Z"
    },
    {
        "title": "WebGL Basics",
        "uri": "posts/webgl-basics",
        "content": "Coordinate System x  y  z axes WebGL  z axis signifies depth  coordinates WebGL restricted  1  1  1    1   1   1   Positive value meaning  z  near viewer  x  near right  y  near top  Graphics System Vertices draw polygon  need mark points plane join form desired polygon  vertex point defines conjunction edges 3D object  Use javascript arrays stores points  coordinates  0 5  0 5  0 5   Indices numerical values used identify vertices call Indices  Arrays no predefined methods WebGL render vertices directly  let vertices    0 5  0 5  0 1   0 5  0 5   0 5   Buffers Buffers memory areas WebGL hold data  various buffers  drawing buffer frame buffer vertex buffer index buffer vertex buffer index buffer used describe process geometry model  stores data vertices indices respectively  frame buffer portion graphics memory hold scene data  buffer contains details width height surface  in pixels   color pixel  depth stencil buffers  Mesh WebGL API provides two methods draw 2D 3D objects  drawArrays   drawElements   accept parameter called mode using select object want draw  mode  points lines triangles construct primitive polygons using points  lines triangles  Thereafter  form mesh using polygons  3D object drawn using primitive polygons called mesh  Shader Programs WebGL uses GPU accelerated computing  information triangles transferred CPU GPU takes lot communication overhead  WebGL provides solution reduce communication overhead  uses ES SL Embedded System Shader Language  runs GPU  write required programs draw graphical elements client system using shader programs OpenGL ES Shader Language   Shader snippet implements algorithms pixels mesh  two types shaders  Vertex Shader Fragment Shader  Vertex Shader called every vertex  used transform geometry one place another  handle data vertex vertex coordinates  normals  colors  texture coordinates  vertex transformation normal transformation normalization texture coordinate generation texture coordinate transformation lighting color material application Fragment Shader Pixel Shader  mesh formed multiple triangles  surface triangles known fragment  Fragment shader code runs pixels every fragment  written calculate fill color individual pixels  operations interpolated values texture access texture application fog color sum OpenGL ES SL Variables handle data shader programs  ES SL provides three types variables  Attributes  hold input values vertex shader program  Attributes point vertex buffer objects contains per vertex data  Uniforms  hold input data common vertex fragment shaders  light position  texture coordinates color  Varyings  used pass data vertex shader fragment shader",
        "objectID": "posts/webgl-basics",
        "date": "2022-03-03T02:31:04.000Z",
        "draft": false,
        "math": true,
        "featuredImage": "https://tva4.sinaimg.cn/large/008ieO5lly8gqbwu0fjchj31hc0u0drh.jpg",
        "featuredImagePreview": "https://tva4.sinaimg.cn/large/008ieO5lly8gqbwu0fjchj31hc0u0drh.jpg",
        "keywords": [
            "WebGL"
        ],
        "tags": [
            "WebGL"
        ],
        "categories": [
            "WebGL"
        ]
    }
]